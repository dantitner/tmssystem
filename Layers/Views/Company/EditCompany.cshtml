@model Layers.Models.CompanyVM

@{
    ViewBag.Title = "EditCompany";
}

<h2>Редактировать компанию</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>@Model.Name</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.EnteringPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EnteringPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EnteringPassword, "", new { @class = "text-danger" })
        </div>
    </div>


    <table>
        <tr>
            <th>
                Имя сотрудника
            </th>
            <th>
                E-Mail
            </th>
            <th>
                Состояние
            </th>
        </tr>
        @foreach (var item in Model.Users)
        {
        <tr>
            <td>
                @item.Name
            </td>
            <td>
                @item.Email
            </td>
            <td>
                <input type="checkbox" name="employedUsers" value="@item.Id"
                       @(Model.Users.Contains(item) ? "checked=\"checked\"" : "") />@item.Name нанят<br />
                </td>
        </tr>
        }
    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
